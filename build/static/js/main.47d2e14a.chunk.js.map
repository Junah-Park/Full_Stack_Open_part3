{"version":3,"sources":["components/Add.js","components/Person.js","components/Persons.js","services/personService.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Add","newName","newNumber","handleNameChange","handleNumberChange","addName","onSubmit","value","onChange","type","Person","id","name","number","deletePerson","onClick","Persons","persons","map","person","baseUrl","axios","get","then","response","data","newObject","post","delete","Notification","message","setNotification","className","App","useState","setPersons","setNewName","setNewNumber","notification","useEffect","personService","initialPersons","catch","err","console","log","event","preventDefault","target","find","alert","returnedPerson","concat","setTimeout","delPerson","window","confirm","res","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47d2e14a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//form to add persons to the phonebook\r\nfunction Add({newName, newNumber, handleNameChange, handleNumberChange, addName}) {\r\n    return (\r\n        <form onSubmit={addName}>\r\n            <div>\r\n                name: <input \r\n                    value={newName}\r\n                    onChange={handleNameChange}\r\n                />\r\n                </div>        \r\n                <div>\r\n                number: <input \r\n                    value={newNumber}\r\n                    onChange={handleNumberChange}\r\n                />\r\n                </div>\r\n                <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>      \r\n    )\r\n}\r\n\r\nexport default Add\r\n","import React from 'react'\r\n\r\n//individual person and number\r\nfunction Person({id, name, number, deletePerson}) {\r\n    return (\r\n        <div>\r\n            {name} {number} \r\n            <button onClick={() => deletePerson(id)}>X</button>\r\n        </div>)\r\n}\r\n\r\nexport default Person\r\n","import React from 'react'\r\nimport Person from './Person'\r\n\r\nfunction Persons({persons, deletePerson}) {\r\n    //console.log(persons)\r\n\r\n\r\n    return (\r\n        <div>\r\n            {persons?.map((person)=>{\r\n            //console.log(i, person.name);\r\n            return <Person key={person.id} id={person.id} name={person.name} number={person.number} deletePerson={deletePerson}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Notification = ({ message, setNotification }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className=\"notification\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Add from './components/Add'\nimport Persons from './components/Persons'\nimport personService from './services/personService'\nimport Notification from './components/Notification'\nimport './index.css';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')  \n  const [ notification, setNotification] = useState(null)\n  \n  //add a name along with a number to the phonebook if it isn't found\n  const addName = (event) => {\n    event.preventDefault()\n\n    //empty name error handling\n    if (newName === \"\") {\n      return;\n    }\n\n    //if the person isn't in the phonebook, add to the phonebook\n    if (!persons.find((person)=>person.name === newName)) {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n      // console.log(newPerson)\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNotification(`Added ${returnedPerson.name}`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    }\n    else {\n      alert(`${newName} is already added to phonebook`)\n    }\n  }\n  \n  //button function for deleting an entry from the database\n  const deletePerson = (id) => {\n      //console.log(id)\n      const delPerson = persons.find(person => person.id === id)\n      const confirmDelete = window.confirm(`Delete ${delPerson.name}?`)\n      if (confirmDelete) {\n        personService\n            .remove(id)\n            .then((res) => {\n              //console.log(res)\n              //remove person from state by filtering id\n              setPersons(persons.filter((person) => person.id !== id))\n              setNotification(`Removed ${delPerson.name}`)\n              setTimeout(() => {\n                setNotification(null)\n              }, 5000)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n      }\n      \n  }\n  \n  //update the name number state value upon changes to the text fields\n  const handleNameChange = (event) => {\n    event.preventDefault()\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    event.preventDefault()\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  //initialize phonebook state with data from server\n  useEffect(() => {\n    // console.log('effect')\n    personService\n      .getAll()\n      .then( initialPersons => {\n        //console.log(initialPersons)\n        //return each object in the array of json data\n        setPersons(initialPersons)        \n        //setPersons(res.data.map((person) => {return {name:person.name, number:person.number}}))\n      })\n      .catch((err)=> console.log(err))\n      // console.log(persons)\n  },[])\n\n  //JSX that displays each name + number in the phonebook and a form to \n  //enter names and numbers\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification \n        // style={\n        //   {\n        //     color: 'green',\n        //     background: 'lightgrey',\n        //     'font-size': '20px',\n        //     'border-style': 'solid',\n        //     'border-radius': '5px',\n        //     'padding': '10px',\n        //     'margin-bottom': '10px'\n        //   }\n        // } \n        message={notification}\n        setNotification={setNotification}\n      />\n      <h2>Add a person</h2>\n      <Add\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addName={addName}\n      />\n      <h2>Numbers</h2>\n      <Persons \n        persons={persons} \n        deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}